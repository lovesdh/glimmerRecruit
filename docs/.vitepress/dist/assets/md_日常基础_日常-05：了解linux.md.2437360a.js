import{_ as e,o as a,c as l,Q as s}from"./chunks/framework.e90f0c97.js";const m=JSON.parse('{"title":"日常-05：了解linux","description":"","frontmatter":{},"headers":[],"relativePath":"md/日常基础/日常-05：了解linux.md","filePath":"md/日常基础/日常-05：了解linux.md"}'),i={name:"md/日常基础/日常-05：了解linux.md"},o=s('<p><img src="https://pic.imgdb.cn/item/64cde48a1ddac507ccdd6be8.png" alt=""></p><h1 id="日常-05-了解linux" tabindex="-1">日常-05：了解linux <a class="header-anchor" href="#日常-05-了解linux" aria-label="Permalink to &quot;日常-05：了解linux&quot;">​</a></h1><blockquote><p><code>难度系数：普通</code></p><p><strong>你使用过哪些操作系统？windows.linux,android,macos······</strong></p></blockquote><h2 id="什么是linux" tabindex="-1">什么是Linux <a class="header-anchor" href="#什么是linux" aria-label="Permalink to &quot;什么是Linux&quot;">​</a></h2><p><code>linux</code>是一款开源的类<code>unix</code>操作系统,<code>lunux</code>英文解释为<code>linux is not unix</code>,<code>linux</code>是由<code>Linus</code>受<code>unix</code>和<code>minix</code>思想启发用C语言写的，<code>linus</code>只是写了<code>linux</code>的内核，后来，无数人对<code>linux</code>进行了维护和扩展，<code>githug</code>上显示的贡献者<img src="https://pic.imgdb.cn/item/64cddc6b1ddac507ccc8d0d6.png" alt=""></p><h2 id="安装linux" tabindex="-1">安装Linux <a class="header-anchor" href="#安装linux" aria-label="Permalink to &quot;安装Linux&quot;">​</a></h2><p>要想了解linux，肯定要安装一个Linux玩玩，推荐以下方式安装⚙️⚙️⚙️</p><ul><li><a href="https://docs.microsoft.com/zh-cn/windows/wsl/install" target="_blank" rel="noreferrer">安装 WSL | Microsoft Docs</a>(可以搭配vscode,比较好用)</li><li>使用<a href="https://www.vmware.com/cn/products/workstation-player.html" target="_blank" rel="noreferrer">VMware Workstation Player | VMware | CN</a>安装虚拟机</li><li>购买服务器，腾讯云，阿里云，华为云等等（有学生优惠😊）</li></ul><h2 id="学习linux" tabindex="-1">学习Linux <a class="header-anchor" href="#学习linux" aria-label="Permalink to &quot;学习Linux&quot;">​</a></h2><h3 id="什么是终端" tabindex="-1">什么是终端 <a class="header-anchor" href="#什么是终端" aria-label="Permalink to &quot;什么是终端&quot;">​</a></h3><p>终端是与计算机系统相连的一种输入，输出设备，通常离计算机较远，是一种人与计算机交互的接口。</p><p>早期的终端是一种叫做电传打字机的东西，在早期，计算机是比较大型的，有一整个书柜那么大，一个计算机对应一个用户是比较浪费的，为了提高计算机的使用效率，<code>unix</code>之父设计了一个能够支持多用户进行操作的操作系统，也就是<code>unix</code>，实现一台计算机供给多个用户使用。当时，用户是通过电传打字机（有键盘和纸带）来与计算机进行交互，用户通过键盘向计算机输入，计算机把信息输出到纸带上。</p><p><img src="https://pic.imgdb.cn/item/64c4a2511ddac507cc001eb3.jpg" alt="陪伴我们走过五十年的键盘"></p><p>​ （电传打字机）</p><p>现在的终端：现在已经人手一台计算机，以一台台式机为例，终端输入设备有鼠标，键盘⌨️，麦克风🎤；终端输出设备有显示器📺，扬声器📢。</p><p>但是，我们现在所说的终端一般不是指物理终端，而是指虚拟终端（终端模拟器），在<code>windows</code>下<code>win+R</code>,输入<code>cmd</code>打开终端，在<code>Linux</code>中<code>Ctrl+Alt+t</code>打开终端，<code>Ctrl+d</code>关闭终端。</p><p>我们可以在终端模拟器上输入命令，然后终端模拟器会输出信息。</p><p><img src="https://pic.imgdb.cn/item/64c4a22b1ddac507ccffdd04.jpg" alt="image-20240715144956167"></p><p>​ （Linux下的终端）</p><h3 id="什么是shell-壳-🤔" tabindex="-1">什么是shell(壳)🤔 <a class="header-anchor" href="#什么是shell-壳-🤔" aria-label="Permalink to &quot;什么是shell(壳)🤔&quot;">​</a></h3><blockquote><p><strong>在计算机科学中，shell俗称”壳“（区别于“核“，Linux内核）。</strong></p><p><strong>简单来说shell就是一个将用户或应用程序输入的命令翻译成Linux内核理解的语言交给linux内核处理，然后将Linux内核的执行结果返还给应用程序或用户的程序。</strong></p></blockquote><p>shell是一种用C语言写的程序，是用户使用Linux的桥梁，shell既是一种命令语言（也就是我们平时使用的Linux命令），也是一种程序设计语言（shell脚本）。</p><p>shell 指 “提供给使用者使用界面” 的软件，即 Command Interpreter - 命令解析器。shell 接收用户或者其他应用程序的命令，然后将这些命令转化成内核能够理解的语言并传递给内核，内核执行命令完成后，再将执行结果返回给用户或者应用程序。</p><p>shell 是包裹在操作系统 外层 的一道程序，负责外界与 Linux “内核” 的交互，但它隐藏了操作系统底层的具体细节，就像是 Linux 内核的一个 “外壳”，所以 shell（壳）的名称也由此而来。</p><p>shell不止一种，历史长河中有许多种shell</p><ul><li>Bourne shell(简称sh):第一个shell</li><li>C shell（简称csh):由于语法和C语言类似得名</li><li>Bourne Again Shell（bash):对sh的增强版</li></ul><p>Linux默认使用的是bash,只要我们学会使用bash，就能快乐地使用任何一个Linux发行版😊</p><h3 id="终端和shell的关联和区别" tabindex="-1">终端和shell的关联和区别 <a class="header-anchor" href="#终端和shell的关联和区别" aria-label="Permalink to &quot;终端和shell的关联和区别&quot;">​</a></h3><p>终端是人机交互的一个接口，提供一个界面给我们输入命令，然后把命令交给shell。</p><p>shell会翻译命令，然后交给Linux内核，然后再把内核的执行结果交给终端，终端再显示出来。</p><p>当我们打开终端时，shell也会启动，操作系统会将终端和shell关联起来，我们在终端输入命令，shell负责解析命令。</p><h3 id="学会用命令行" tabindex="-1">学会用命令行 <a class="header-anchor" href="#学会用命令行" aria-label="Permalink to &quot;学会用命令行&quot;">​</a></h3><p>在windows中，大家都是用图形化的界面进行交互，在Linux也可以使用图形化的界面进行交互，但是，当你是远程链接的时候，使用图形化的界面就比较复杂，所以使用命令行进行交互是十分有必要的，这也有助于我们学习Linux😄.</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/420247468" target="_blank" rel="noreferrer">40个最常用的Linux命令行大全 - 知乎 (zhihu.com)</a></p></li><li><p><a href="https://www.cnblogs.com/kuangtf/articles/16353162.html" target="_blank" rel="noreferrer">45 个常用Linux 命令，让你轻松玩转Linux！ - Maple~ - 博客园 (cnblogs.com)</a></p></li><li><p>这些命令也不需要完全记下来，用多了就会了，不会的可以查。</p></li><li><p>了解一下”一切皆文件“的Linux思想以及Linux的文件系统层次</p><p><a href="https://www.bilibili.com/video/BV1aY41187vg/?spm_id_from=333.999.0.0&amp;vd_source=eaf1f6e0ac8871345d54cff94e445d4f" target="_blank" rel="noreferrer">【计算机学习的第 0 课】2. 文件系统层次标准(FHS)_哔哩哔哩_bilibili</a></p></li><li><p>了解一下文件权限🤔，并尝试修改</p></li><li><p>如何安装软件，使用apt或者yum</p></li></ul><h3 id="如何在终端写程序" tabindex="-1">如何在终端写程序 <a class="header-anchor" href="#如何在终端写程序" aria-label="Permalink to &quot;如何在终端写程序&quot;">​</a></h3><p>在Linux中，也可以像在Windows中一样下载各种IDE写程序，但是在终端中如何写程序呢，下面以c语言为例，简单介绍一下</p><p><strong>step1 创建.c文件</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">linux &gt; touch test.c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">linux &gt; touch test.c</span></span></code></pre></div><p><strong>step2 编辑</strong></p><p>在IDE中，集成了IDE给我们使用，那么我们在终端中使用什么编辑器呢，推荐使用<code>vim</code>,<code>neovim</code>等等</p><p>以<code>vim</code>为例，首先，我们要下载vim</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">linux &gt; sudo apt install vim</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">linux &gt; sudo apt install vim</span></span></code></pre></div><p>然后用<code>vim</code>打开<code>test.c</code></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">linux &gt; vim test.c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">linux &gt; vim test.c</span></span></code></pre></div><p>然后编辑写程序✏️，<code>vim</code>和我们平常的编辑器有点不一样，比较难上手，使用熟练了可以提高效率💪。</p><ul><li><a href="https://www.runoob.com/linux/linux-vim.html" target="_blank" rel="noreferrer">Linux vi/vim | 菜鸟教程 (runoob.com)</a></li><li><a href="https://missing-semester-cn.github.io/2020/editors/" target="_blank" rel="noreferrer">编辑器 (Vim) · the missing semester of your cs education (missing-semester-cn.github.io)</a></li></ul><p><strong>step3 编译</strong></p><p>当我们写完了一个简单的<code>test.c</code>后，我们需要手动进行编译等工作（不像IDE那样用鼠标点几下就可以运行了）</p><p>我们需要下载<code>gcc</code>（c编译器）</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">linux &gt; sudo apt install gcc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">linux &gt; sudo apt install gcc</span></span></code></pre></div><p>进行编译等工作，把源文件变成可执行文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">linux &gt; gcc test.c</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">linux &gt; gcc test.c</span></span></code></pre></div><p>默认生成的可执行文件名是<code>a.out</code>,你也可以指定生成的文件名，<code>gcc</code>还有一些参数选项,有兴趣可以上网查看🔍</p><p>最后运行程序</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">linux &gt; ./a.out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">linux &gt; ./a.out</span></span></code></pre></div><h2 id="提交方式" tabindex="-1">提交方式 <a class="header-anchor" href="#提交方式" aria-label="Permalink to &quot;提交方式&quot;">​</a></h2><p>不用提交</p><h2 id="出题者q-a方式" tabindex="-1">出题者Q&amp;A方式 <a class="header-anchor" href="#出题者q-a方式" aria-label="Permalink to &quot;出题者Q&amp;A方式&quot;">​</a></h2><p>QQ：239148349</p><p>邮箱：LLP_PLL@outlook.com</p>',60),t=[o];function c(n,p,d,r,h,u){return a(),l("div",null,t)}const x=e(i,[["render",c]]);export{m as __pageData,x as default};
