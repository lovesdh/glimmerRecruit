import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.e90f0c97.js";const d=JSON.parse('{"title":"C Basis-02 来邂逅\\"语句\\"吧","description":"","frontmatter":{},"headers":[],"relativePath":"md/计算机系统/CS-EASY-02 基础数据结构.md","filePath":"md/计算机系统/CS-EASY-02 基础数据结构.md"}'),o={name:"md/计算机系统/CS-EASY-02 基础数据结构.md"},p=n(`<img src="https://pic.imgdb.cn/item/64fdc2b6661c6c8e543d9600.png" alt="C.png"><h1 id="c-basis-02-来邂逅-语句-吧" tabindex="-1">C Basis-02 来邂逅&quot;语句&quot;吧 <a class="header-anchor" href="#c-basis-02-来邂逅-语句-吧" aria-label="Permalink to &quot;C Basis-02 来邂逅&quot;语句&quot;吧&quot;">​</a></h1><h2 id="part-1-语句" tabindex="-1">Part 1 语句 <a class="header-anchor" href="#part-1-语句" aria-label="Permalink to &quot;Part 1 语句&quot;">​</a></h2><blockquote><p>在了解过计算机系统语法基础和基本程序逻辑后，让我们学习一些简单语句吧，毕竟语句才是程序执行的根本内容，灵活应用简单的语句是写好代码的基础。</p></blockquote><h3 id="step-1-a-b-c" tabindex="-1">Step 1 A + B = C <a class="header-anchor" href="#step-1-a-b-c" aria-label="Permalink to &quot;Step 1 A + B = C&quot;">​</a></h3><p>编写一个程序，终端给a、b赋值，完成 a + b 计算，将结果赋给c，并在终端输出。</p><blockquote><p>提交方式：截图展示代码和程序运行结果</p></blockquote><h3 id="step-2-聊聊函数吧" tabindex="-1">Step 2 聊聊函数吧 <a class="header-anchor" href="#step-2-聊聊函数吧" aria-label="Permalink to &quot;Step 2 聊聊函数吧&quot;">​</a></h3><blockquote><p>我们在写代码实现一些功能时，难免会有一些代码重复的被使用，这时候我们便可以将这段代码整理起来，将其封装成为能够独立完成某个功能的函数。</p><p>接下来我们来简单了解一下什么是函数。</p></blockquote><p>阅读以下程序，并回答问题</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sum</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> i, sum</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">&lt;=</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        sum</span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;">i;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> sum;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sum</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> i, sum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">&lt;=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        sum</span><span style="color:#D73A49;">+=</span><span style="color:#24292E;">i;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> sum;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ol><li>描述&#39;sum()&#39;前&#39;int&#39;代表什么含义</li><li>描述函数实现什么功能</li><li>描述形式参数与实际参数的区别</li><li>尝试用函数包装 step1中两数相加的功能</li></ol><blockquote><p>提交方式：文字叙述 截图展示代码和程序运行结果</p></blockquote><h2 id="part-2-数据类型" tabindex="-1">Part 2 数据类型 <a class="header-anchor" href="#part-2-数据类型" aria-label="Permalink to &quot;Part 2 数据类型&quot;">​</a></h2><p>我们可以简单地将计算机系统数据类型分为四大块：</p><ol><li>基本数据类型</li></ol><blockquote><p>整型，浮点型，字符型</p></blockquote><ol><li>构造类型</li></ol><blockquote><p>结构体，联合体，枚举</p></blockquote><ol><li>指针类型</li><li>空类型（void）</li></ol><blockquote><p>先学习一下吧: <a href="https://www.runoob.com/cprogramming/c-data-types.html" target="_blank" rel="noreferrer">https://www.runoob.com/cprogramming/c-data-types.html</a></p></blockquote><h3 id="step-1" tabindex="-1">Step 1 <a class="header-anchor" href="#step-1" aria-label="Permalink to &quot;Step 1&quot;">​</a></h3><p>学习一些相关的知识后，相信你已经对数据类型有了认识，那么来回答问题吧。</p><ol><li>unsigned int 与 int存储值范围不同的底层原理是什么</li><li>计算此结构体占用内存的大小</li></ol><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> b;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">double</span><span style="color:#E1E4E8;"> c;</span></span>
<span class="line"><span style="color:#E1E4E8;">}size;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#E36209;">a</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> b;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">double</span><span style="color:#24292E;"> c;</span></span>
<span class="line"><span style="color:#24292E;">}size;</span></span></code></pre></div><ol start="3"><li>阐述 计算结构体与联合体所占空间大小 的方法</li></ol><blockquote><p>提交方式：文字叙述</p></blockquote><h3 id="step-2" tabindex="-1">Step 2 <a class="header-anchor" href="#step-2" aria-label="Permalink to &quot;Step 2&quot;">​</a></h3><p>在满足以下条件情况下使用，用多种(只有一种也可提交)方法实现两个变量间的数据交换</p><ul><li>两个变量均为int型</li><li>不声明第三个变量</li></ul><blockquote><p>提交方式：截图展示代码和程序运行结果</p></blockquote><h2 id="part-3-试试循环吧" tabindex="-1">Part 3 试试循环吧 <a class="header-anchor" href="#part-3-试试循环吧" aria-label="Permalink to &quot;Part 3 试试循环吧&quot;">​</a></h2><p>一组无规则排列的数：33,5,46,8,56,4,36,45,32,52,53,5</p><p>要求：编写程序将数字依次存入数组，并实现从大到小的排列，最后输出一组有序数。</p><blockquote><p>tips：排序算法，循环语句</p></blockquote><blockquote><p>提交方式： 截图展示代码和程序运行结果</p></blockquote><h2 id="题目要求" tabindex="-1">题目要求 <a class="header-anchor" href="#题目要求" aria-label="Permalink to &quot;题目要求&quot;">​</a></h2><ol><li>良好的代码习惯</li><li>提交pdf文档</li><li>按照顺序排列每一步的答案</li></ol><h2 id="本题提交方式" tabindex="-1">本题提交方式 <a class="header-anchor" href="#本题提交方式" aria-label="Permalink to &quot;本题提交方式&quot;">​</a></h2><blockquote><p>收件邮箱：glimmer401<a href="https://antio2.github.io/Glimmer-Recruit/outlook.com" target="_blank" rel="noreferrer">@outlook.com</a></p><p>主题格式：学号-姓名-考核-Cbasis-02</p><p>主题实例：2024090901001-三-考核-Cbasis-02</p></blockquote><h2 id="出题人联系方式" tabindex="-1">出题人联系方式 <a class="header-anchor" href="#出题人联系方式" aria-label="Permalink to &quot;出题人联系方式&quot;">​</a></h2><blockquote><p>QQ：1741049376</p><p>邮箱：1741049376@qq.com</p></blockquote>`,42),e=[p];function t(c,r,i,E,y,u){return a(),l("div",null,e)}const b=s(o,[["render",t]]);export{d as __pageData,b as default};
