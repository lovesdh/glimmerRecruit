import{_ as r,o as e,c as t,Q as a}from"./chunks/framework.e90f0c97.js";const d=JSON.parse('{"title":"后端GO/Java项目","description":"","frontmatter":{},"headers":[],"relativePath":"md/后端/后端综合项目出题.md","filePath":"md/后端/后端综合项目出题.md"}'),o={name:"md/后端/后端综合项目出题.md"},n=a('<p><img src="https://pic.imgdb.cn/item/64fdbcf1661c6c8e543bdfd9.png" alt="Web后端"></p><h1 id="后端go-java项目" tabindex="-1">后端GO/Java项目 <a class="header-anchor" href="#后端go-java项目" aria-label="Permalink to &quot;后端GO/Java项目&quot;">​</a></h1><h2 id="_0概述-前置" tabindex="-1"><strong>0概述&amp;前置</strong> <a class="header-anchor" href="#_0概述-前置" aria-label="Permalink to &quot;**0概述&amp;前置**&quot;">​</a></h2><p>在做后端web项目之前，相信你已经是有一种开发语言(Java/Go)的佬佬🥰，接下来我们会逐渐引导你做出一个后端项目，体验企业是如何进行web后端业务开发的。</p><p>做一个传统的server服务器端，需要的功能有：</p><ol><li>与前端交互</li><li>和机器学习的后端进行交互</li></ol><p><strong>对于接口</strong>也就分为前端接口和机器学习后端接口，与两者都通过http通信，最好大部分情况都采用restful风格交互，对于最后一个广播机制的实现，可以选取restful风格进行轮询，更推荐使用websocket进行长连接的方式。会考察你自己设计接口的规范性。</p><p><strong>数据库</strong>根据需要，选用mysql这类关系型数据库即可，当然也可以了解一下非关系型数据库如MongoDB等。</p><p><strong>交换信息的方式</strong>前端、服务器端、机器学习后端，他们在开发者层面的交流方式是需要统一的，这里我们<strong>绝大部分接口</strong>采用广为使用的json数据格式来进行通讯。</p><p><strong>apifox等类似工具的使用</strong>:很有可能你的前端、机器学习后端并没有写完成你写好的部分，然而你需要一些虚假的数据来调试，或者你没有完成，而你的前端、机器学习后端完成了响应部分需要调试，那就需要这样的工具，使用mock来伪造数据进行调试，尽可能早的发现你写的bug。而且他们还能在团队协作中共享文档，从而很好的统一接口。</p><p><strong>IDE(集成开发环境)的选取：</strong> 推荐使用JetBrains全家桶系列相关的IDE，如GO语言选取GoLand、Java语言选取IDEA。（记得申请学生免费使用，破解版可以先用两天，等你学生特权发放下来就能完全使用正版了）</p><p><strong>当然</strong>，我们这个题目只需要你实现Java/go的服务器后端部分，所以你需要写好接口和mock数据（不需要动态，当然动态变化的更好）来进行你后端的效果展示😊。</p><p><strong>网络的知识</strong>：什么是ip、什么是端口号、什么是url、什么是http(请求与响应、状态码等)、什么是Tomcat服务器？</p><hr><p>此外，在不同语言方向上，希望你了解：</p><p><strong>go：</strong></p><p><strong>gin框架：</strong> 能够很方便的快速开发一个高性能的轻量级web后端。要了解路由匹配的方式，要了解服务器是怎么响应客户端的，有一个守护进程/线程/协程 来接收客户端的请求，然后开出一个子进程/子线程/子协程 来对请求进行响应服务。</p><p><strong>module机制</strong>：相信前面的题目你已经知道了这个东东，不过有些小坑要注意，本地开始跑的时候记得多看看报错信息喔</p><p><strong>java</strong>：</p><p><strong>Maven</strong>：你需要学会使用它来进行Java项目的构建、依赖管理和文档管理等。</p><p><strong>spring框架</strong>：是一个开源的Java企业应用程序框架，它提供了一组丰富的功能和组件，封装了底层实现，可以极大地提高我们代码开发的效率。当然在开始之前你需要了解spring的核心思想IOC容器、AOP切面编程以及数据访问等从而进行Web开发。</p><hr><h2 id="该如何做题-引导在哪里" tabindex="-1"><strong>该如何做题，引导在哪里？</strong> <a class="header-anchor" href="#该如何做题-引导在哪里" aria-label="Permalink to &quot;**该如何做题，引导在哪里？**&quot;">​</a></h2><p>我们将引导和做题方式放在了项目说明的README文档中里😊，详情请参考项目地址：<a href="https://gitlab.com/glimmerbackend" target="_blank" rel="noreferrer">https://gitlab.com/glimmerbackend</a></p><p>再给一个目录吧，万一小可爱没仔细看呢？</p><p>go：</p><p>引导入门（task0&amp;1开始）：<a href="https://gitlab.com/glimmerbackend/gorecruit/-/tree/main/src?ref_type=heads" target="_blank" rel="noreferrer">https://gitlab.com/glimmerbackend/gorecruit/-/tree/main/src?ref_type=heads</a></p><p>与前端交互模块题目（task2开始了）：<a href="https://gitlab.com/glimmerbackend/gorecruit/-/tree/main/src/interactFront?ref_type=heads" target="_blank" rel="noreferrer">https://gitlab.com/glimmerbackend/gorecruit/-/tree/main/src/interactFront?ref_type=heads</a></p><p>与机器学习后端交互模块题目（从task4开始了）：<a href="https://gitlab.com/glimmerbackend/gorecruit/-/tree/main/src/mlBackend?ref_type=heads" target="_blank" rel="noreferrer">https://gitlab.com/glimmerbackend/gorecruit/-/tree/main/src/mlBackend?ref_type=heads</a></p><p>这个是怕小伙伴第一次看见仓库，不知道题目在哪里，所以尽可能的多一些引导（这些部分都是题目仓库里面的）</p><p>java：</p><p>README1：<a href="https://gitlab.com/glimmerbackend/JavaRecruit/-/blob/master/MonitorProject/README.md" target="_blank" rel="noreferrer">https://gitlab.com/glimmerbackend/JavaRecruit/-/blob/master/MonitorProject/README.md</a></p><p>README2：<a href="https://gitlab.com/glimmerbackend/JavaRecruit/-/blob/master/MonitorProject/monitor-server/README.md" target="_blank" rel="noreferrer">https://gitlab.com/glimmerbackend/JavaRecruit/-/blob/master/MonitorProject/monitor-server/README.md</a></p><p>README3：<a href="https://gitlab.com/glimmerbackend/JavaRecruit/-/blob/master/MonitorProject/monitor-server/src/README.md" target="_blank" rel="noreferrer">https://gitlab.com/glimmerbackend/JavaRecruit/-/blob/master/MonitorProject/monitor-server/src/README.md</a></p><hr><h2 id="题目要求" tabindex="-1"><strong>题目要求</strong> <a class="header-anchor" href="#题目要求" aria-label="Permalink to &quot;**题目要求**&quot;">​</a></h2><ul><li>正确的可执行的项目模块代码</li><li>记录你的做题思路，可能遇见的问题</li><li>接口以及相关说明</li><li>可以完成一个task就提交一次</li><li>你需要用markdown格式文档书写题解，并转成PDF格式文档提交</li></ul><hr><h2 id="本题提交方式" tabindex="-1"><strong>本题提交方式</strong> <a class="header-anchor" href="#本题提交方式" aria-label="Permalink to &quot;**本题提交方式**&quot;">​</a></h2><blockquote><p>收件邮箱：<a href="mailto:glimmer401@outlook.com" target="_blank" rel="noreferrer">glimmer401@outlook.com</a></p><p>主题格式： 学号-姓名-考核-后端综合-02-Java/GO</p><p>主题示例：2024090101012-张三-考核-后端综合-02-Java</p></blockquote><hr><h2 id="出题人联系方式" tabindex="-1"><strong>出题人联系方式</strong> <a class="header-anchor" href="#出题人联系方式" aria-label="Permalink to &quot;**出题人联系方式**&quot;">​</a></h2><blockquote><p><strong>GO</strong>方向</p><p>QQ：1429572661</p><p>邮箱：<a href="mailto:1429572661@qq.com" target="_blank" rel="noreferrer">1429572661@qq.com</a></p><p><strong>Java</strong>方向</p><p>QQ：1972701037</p><p>邮箱：<a href="mailto:1972701037@qq.com" target="_blank" rel="noreferrer">1972701037@qq.com</a></p></blockquote>',43),s=[n];function i(l,p,c,m,g,b){return e(),t("div",null,s)}const _=r(o,[["render",i]]);export{d as __pageData,_ as default};
