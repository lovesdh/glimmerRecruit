import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.e90f0c97.js";const h=JSON.parse('{"title":"Java01 - Java基础","description":"","frontmatter":{},"headers":[],"relativePath":"md/后端/Java01.md","filePath":"md/后端/Java01.md"}'),o={name:"md/后端/Java01.md"},p=l(`<p><img src="https://pic.imgdb.cn/item/64fdbcf1661c6c8e543bdfd9.png" alt="Web后端"></p><h1 id="java01-java基础" tabindex="-1">Java01 - Java基础 <a class="header-anchor" href="#java01-java基础" aria-label="Permalink to &quot;Java01 - Java基础&quot;">​</a></h1><pre><code>难度系数：简单
</code></pre><h2 id="part1-hello-java" tabindex="-1">Part1. Hello Java! <a class="header-anchor" href="#part1-hello-java" aria-label="Permalink to &quot;Part1. Hello Java!&quot;">​</a></h2><p>看来你打算来学习Java了！那么马上来准备<s>狠狠赚一笔</s><br> 咳、不能急，学编程语言第一件事一般是输出一个<strong>HelloWorld</strong>，代码已经准备好了：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HelloJava</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] </span><span style="color:#FFAB70;">args</span><span style="color:#E1E4E8;">){</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello World&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HelloJava</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] </span><span style="color:#E36209;">args</span><span style="color:#24292E;">){</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello World&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>但是……怎么运行呢？(°ー°〃)</p><h3 id="task1" tabindex="-1">Task1. <a class="header-anchor" href="#task1" aria-label="Permalink to &quot;Task1.&quot;">​</a></h3><p>复制这段代码，在本地创建一个空文件&quot;HelloJava.java&quot;（不要更改文件名！），使用文本编辑器（记事本/vim等）编辑它，粘贴这段代码，然后通过命令行，使用Java编译并运行这段代码！</p><blockquote><p>回答要求：<br></p><ol><li>记录你完成本题的整个过程和遇到的问题，配以必要的截图等。<br></li><li>说说你编译的过程中使用了什么命令，产生了哪些文件，这些命令和文件分别有什么作用。<br></li><li>查找资料并结合本题，为什么说java是，但不仅仅是编译型语言？它和纯解释型语言（如python）、纯编译型语言（如C）有什么区别和相似之处？<br></li></ol></blockquote><h4 id="tips" tabindex="-1">Tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;Tips&quot;">​</a></h4><ol><li><strong>安装jdk</strong> 要进行Java开发，首先必须安装jdk（Java开发者工具包）。在后面的链接你可以下载到对应你系统的jdk：<a href="https://www.oracle.com/java/technologies/downloads/" target="_blank" rel="noreferrer">https://www.oracle.com/java/technologies/downloads/</a></li><li><strong>配置环境变量</strong> 以windows为例，安装jdk后，使用win+r键打开“运行”，输入&quot;cmd&quot;打开命令行，输入&quot;java&quot;后回车，可能出现“java不是内部或外部命令，也不是可运行的程序”之类的报错。这时需要配置环境变量才能直接使用&quot;java&quot;调用java。 建议参考网络教程：<a href="https://www.runoob.com/w3cnote/windows10-java-setup.html" target="_blank" rel="noreferrer">https://www.runoob.com/w3cnote/windows10-java-setup.html</a></li><li><strong>编译和运行</strong> 配置完成环境变量后，在命令行使用&quot;javac HelloJava.java&quot; 编译程序，再使用&quot;java HelloJava&quot;运行程序。 什么？你问啥是命令行？<a href="http://b.iou.ink/?q=5LuA5LmI5piv5ZG95Luk6KGM" target="_blank" rel="noreferrer">http://b.iou.ink/?q=5LuA5LmI5piv5ZG95Luk6KGM</a></li></ol><hr><p>＼(^▽^)／太好了，成功运行了我们的第一个Java程序，千里之行始于足下，我们离目标更近了一步。<br> 但是在简陋的记事本里编辑代码稍微有点穷酸了，不太符合对狠狠赚一笔的预期呀！工欲善其事，必先利其器。安装一个高端的Java IDE来提高下程序员范儿吧！</p><h3 id="task2" tabindex="-1">Task2. <a class="header-anchor" href="#task2" aria-label="Permalink to &quot;Task2.&quot;">​</a></h3><p>安装 IntelliJ IDEA（推荐） 或 Eclipse，使用它新建java项目并运行Task1的代码。</p><blockquote><p>安装好即可，不用回答</p></blockquote><hr><p>好了，现在一切准备就绪，是时候成为Java大手子 <s>然后狠狠地赚一笔</s> 啦！先来个小题练练手吧。</p><h3 id="task3" tabindex="-1">Task3. <a class="header-anchor" href="#task3" aria-label="Permalink to &quot;Task3.&quot;">​</a></h3><p>实现程序能接收用户输入的10个整数（用数组存储），输入完成后依次输出每个数与它下一个数的和（除了最后一个数）</p><blockquote><p>回答要求：将代码附在题解上。本题仅仅是为了帮助熟悉Java基础语法，如果你很确信自己了解这部分内容可以选择不做。</p></blockquote><h2 id="part2-面向对象" tabindex="-1">Part2. 面向对象 <a class="header-anchor" href="#part2-面向对象" aria-label="Permalink to &quot;Part2. 面向对象&quot;">​</a></h2><h3 id="类和对象" tabindex="-1">类和对象 <a class="header-anchor" href="#类和对象" aria-label="Permalink to &quot;类和对象&quot;">​</a></h3><blockquote><p>众所周知，Java是面向对象语言的代表，与之相对的是C等等面向过程的语言。面向对象是Java的重要概念</p></blockquote><p><s>你有对象吗？</s> 众所周知，在你电找对象还是多少有一些难度的。但是现在就不必担心了，因为你可以用Java自己创建一个（误</p><p>找对象本质上就是寻找合适的人，而我已经敏锐地发现了人的共同点&lt;(￣︶￣)&gt;，以下就是我总结的Person<strong>类</strong>。</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Person</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    String name;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> age;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">say</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;我叫&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> name </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;今年&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> age </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;岁&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    String name;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> age;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">say</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;我叫&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> name </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;今年&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> age </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;岁&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="task4" tabindex="-1">Task4. <a class="header-anchor" href="#task4" aria-label="Permalink to &quot;Task4.&quot;">​</a></h3><p>请你学习Java的类（Class）、类的属性和类的方法的基本概念，仿照这个代码定义一个有一定属性的方法的Person类</p><blockquote><p>回答要求：说说你理解的类是什么？属性、方法是什么？</p></blockquote><hr><p>但是只有这么个抽象的人<strong>类</strong>可不行，对象应该是一个具体的人，正如罗翔老师曾说： <img src="https://pic.imgdb.cn/item/64fdb96a661c6c8e543b71ce.jpg" alt="罗翔"></p><blockquote><p><s>（听到没有，少搞抽象</s></p></blockquote><blockquote><p>类就是对象的模板，而对象就是类的一个实例 。</p></blockquote><p>于是我们需要一个Person类的实例<br> 获得对象的两个步骤：</p><ol><li>声明一个该类型的变量。</li><li>创建它，为它分配储存空间，然后将该对象的引用赋值给这个变量。一般我们使用new关键字。</li></ol><h3 id="task5" tabindex="-1">Task5. <a class="header-anchor" href="#task5" aria-label="Permalink to &quot;Task5.&quot;">​</a></h3><p>请你在 <em><strong>主类</strong></em> 的main方法中创建一个你的Person类的实例，并给Ta赋予基本属性，调用Ta的方法吧。</p><p>例：</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">[] args){</span></span>
<span class="line"><span style="color:#E1E4E8;">    Person person1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Person</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    person1.name</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;李华&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    person1.age</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">18</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    person1.</span><span style="color:#B392F0;">say</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">[] args){</span></span>
<span class="line"><span style="color:#24292E;">    Person person1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    person1.name</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;李华&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    person1.age</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">18</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    person1.</span><span style="color:#6F42C1;">say</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>回答要求：<br> 1.将要求的代码附在题解中。<br> 2.对象/实例是什么？和类有什么不同？<br> 3.了解一下什么是构造方法。它有什么用？能否用构造方法使代码更简化？<br> 4.什么是this关键字？有什么用？<br> 5.学习instanceof关键字，它有什么作用？</p></blockquote><hr><p>类比真正的人，假如相亲找对象的时候也许有一些秘密（像是年龄啊、体重啊）不想让别人直接知道（访问），能不能让我们的Person类的一些属性或方法不能轻易地被访问和修改呢？</p><h3 id="task6" tabindex="-1">Task6. <a class="header-anchor" href="#task6" aria-label="Permalink to &quot;Task6.&quot;">​</a></h3><p>学习Java的访问修饰符，了解不同的访问修饰符对应的访问权限，然后为你的Person类及其属性和方法添加恰当的访问修饰符，保护一部分信息的隐私，同时允许外部调用一些信息（名字等）。</p><blockquote><p>回答要求：<br> 1.将要求的代码附在题解中。<br> 2.分别讲讲不同的访问修饰符对应的访问权限，以及应该在什么时候使用它们。<br> 3.为什么要限制外部访问？结合“封装”的知识，谈谈你的理解。<br> 4.了解什么是Java的包，讲讲包有什么作用。<br> 5.新建一个名为space.glimmer.lumine的包，将你的类丢进去，尝试从外部访问它。<br> 访问时发生了什么？换其他的访问修饰符呢？</p></blockquote><hr><p>哈哈，现在一切准备就绪，可以狠狠地创建一大堆对象啦！ヾ(≧∇≦*)ゝ为了应对对象太多的情况，机智的我已经为Person类加入了统计数目的功能！(☆-ｖ-)</p><div class="language-Java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Person</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;">//统计数目</span></span>
<span class="line"><span style="color:#E1E4E8;">    ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Person</span><span style="color:#E1E4E8;">(...){</span><span style="color:#6A737D;">//构造方法</span></span>
<span class="line"><span style="color:#E1E4E8;">        ...</span></span>
<span class="line"><span style="color:#E1E4E8;">        count </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span><span style="color:#6A737D;">//每次新创建一个实例就给计数器加1</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getNumber</span><span style="color:#E1E4E8;">(){</span></span>
<span class="line"><span style="color:#E1E4E8;">        System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;当前数目：&quot;</span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;">count);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span><span style="color:#6A737D;">//统计数目</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Person</span><span style="color:#24292E;">(...){</span><span style="color:#6A737D;">//构造方法</span></span>
<span class="line"><span style="color:#24292E;">        ...</span></span>
<span class="line"><span style="color:#24292E;">        count </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span><span style="color:#6A737D;">//每次新创建一个实例就给计数器加1</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    ...</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getNumber</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">        System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;当前数目：&quot;</span><span style="color:#D73A49;">+</span><span style="color:#24292E;">count);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>但是每次得到的结果似乎都是1，这是怎么回事呢 Σ( ° △ °|||)</p><h3 id="task7" tabindex="-1">Task7. <a class="header-anchor" href="#task7" aria-label="Permalink to &quot;Task7.&quot;">​</a></h3><p>了解static关键字，尝试修改代码让它正确计数</p><blockquote><p>回答要求：<br> 1.学习属性和方法的 static 关键字，它能都用来修饰什么？上面的代码中有哪些部分适合用static修饰？<br> 2.如何理解static的“静态”的含义？被static修饰的成员和其他成员有什么区别？<br></p></blockquote><h1 id="本题提交方式" tabindex="-1">本题提交方式 <a class="header-anchor" href="#本题提交方式" aria-label="Permalink to &quot;本题提交方式&quot;">​</a></h1><pre><code>收件邮箱：glimmer401@outlook.com
主题格式： 学号-姓名-考核-Java-01
主题示例：2024090901012-张三-考核-Java-01
</code></pre><h1 id="出题者联系方式" tabindex="-1">出题者联系方式 <a class="header-anchor" href="#出题者联系方式" aria-label="Permalink to &quot;出题者联系方式&quot;">​</a></h1><p>QQ：602599288</p>`,58),e=[p];function t(c,r,E,y,i,u){return a(),n("div",null,e)}const b=s(o,[["render",t]]);export{h as __pageData,b as default};
