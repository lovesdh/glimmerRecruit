import{_ as a,o as l,c as s,Q as o}from"./chunks/framework.e90f0c97.js";const E=JSON.parse('{"title":"C Basis-01 Hello,world!","description":"","frontmatter":{},"headers":[],"relativePath":"md/C语言/C Basis-01 Hello,world!.md","filePath":"md/C语言/C Basis-01 Hello,world!.md"}'),e={name:"md/C语言/C Basis-01 Hello,world!.md"},t=o(`<img src="https://pic.imgdb.cn/item/64fdc2b6661c6c8e543d9600.png" alt="C.png"><h1 id="c-basis-01-hello-world" tabindex="-1">C Basis-01 Hello,world! <a class="header-anchor" href="#c-basis-01-hello-world" aria-label="Permalink to &quot;C Basis-01 Hello,world!&quot;">​</a></h1><blockquote><p>1972年，Brian Kernigham用B语言，在计算机上打印出了世界上第一个&quot;Hello,world!&quot;。</p></blockquote><h2 id="part-1-第一个程序" tabindex="-1">Part 1 第一个程序 <a class="header-anchor" href="#part-1-第一个程序" aria-label="Permalink to &quot;Part 1 第一个程序&quot;">​</a></h2><p>初学编程语言时，第一个程序往往都是<code>Hello,world!</code>，那就让我们来自己尝试一下吧！</p><div class="language-C vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">main</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">main</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello, world!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="task" tabindex="-1">task <a class="header-anchor" href="#task" aria-label="Permalink to &quot;task&quot;">​</a></h3><ul><li><p>在自己的IDE中成功运行上面的代码，并提交成功运行的截图。</p></li><li><p>谈谈对头文件和主函数的理解。（ps：可以谈谈为什么主函数有那么多种形式，例如为什么int可以改为void，为什么可以有参数也可以没有参数）</p></li></ul><h2 id="part-2-为什么我的代码能运行" tabindex="-1">Part 2 为什么我的代码能运行？ <a class="header-anchor" href="#part-2-为什么我的代码能运行" aria-label="Permalink to &quot;Part 2 为什么我的代码能运行？&quot;">​</a></h2><p>当你写下这段代码时，你有没有想过，计算机是怎么将他们从代码变为一个可执行程序，最后将<code>Hello,world!</code>打印在了屏幕上？</p><p>请借助搜索引擎完成下面的任务。</p><h3 id="task-1" tabindex="-1"><strong>task</strong> <a class="header-anchor" href="#task-1" aria-label="Permalink to &quot;**task**&quot;">​</a></h3><ul><li>了解什么是编译器，并用自己的语言解释他的作用。</li><li>画图阐释C语言编译的过程，并<strong>解释在每一步过程中编译器都干了什么</strong>。</li></ul><h2 id="part-3-试试不一样的编译方式" tabindex="-1">Part 3 试试不一样的编译方式？ <a class="header-anchor" href="#part-3-试试不一样的编译方式" aria-label="Permalink to &quot;Part 3 试试不一样的编译方式？&quot;">​</a></h2><p>直接使用IDE编译运行代码可能不太酷，让我们试试使用gcc编译命令运行代码。</p><ol><li>下载并安装gcc编译器（如果已经安装请跳过这一步）。</li><li>使用gcc指令成功编译运行代码。</li></ol><blockquote><p>ps：C不止gcc一个编译器，这里仅用gcc演示编译命令，其他的编译器可自行了解。</p></blockquote><h3 id="task-2" tabindex="-1">task <a class="header-anchor" href="#task-2" aria-label="Permalink to &quot;task&quot;">​</a></h3><ul><li>使用gcc指令编译运行你刚刚写的代码。（可能会出现终端闪一下就消失的情况，这是因为程序运行结束后会自动关闭终端，可以在最后加几条<code>getchar()</code>语句避免这种情况）</li><li>写出几条你了解的<strong>其他gcc编译指令</strong>，并演示他们的用途（结合截图）。</li></ul><h2 id="题目要求" tabindex="-1">题目要求 <a class="header-anchor" href="#题目要求" aria-label="Permalink to &quot;题目要求&quot;">​</a></h2><ul><li>回答题目中的问题时，表达自己的想法。</li><li>有学习过程中自己的理解。</li><li>以文字和截图的形式，并用<code>markdown</code>的格式记录你的完整做题过程</li><li>请提交PDF文档</li></ul><h2 id="需要掌握的知识点" tabindex="-1">需要掌握的知识点 <a class="header-anchor" href="#需要掌握的知识点" aria-label="Permalink to &quot;需要掌握的知识点&quot;">​</a></h2><ul><li>C语言的头文件（标准库）</li><li>主函数</li><li>C语言的编译过程</li><li>gcc编译命令的使用</li></ul><h2 id="tips" tabindex="-1">tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;tips&quot;">​</a></h2><ul><li>善用搜索引擎</li><li><a href="https://www.runoob.com/w3cnote/gcc-parameter-detail.html" target="_blank" rel="noreferrer">gcc编译参数</a></li><li><a href="https://blog.csdn.net/qq_45601448/article/details/109158588" target="_blank" rel="noreferrer">gcc编译器安装教程</a>（不一定参考我这篇，能装上就行）</li></ul><h2 id="本题提交方式" tabindex="-1">本题提交方式 <a class="header-anchor" href="#本题提交方式" aria-label="Permalink to &quot;本题提交方式&quot;">​</a></h2><blockquote><p>收件邮箱：glimmer401<a href="https://antio2.github.io/Glimmer-Recruit/outlook.com" target="_blank" rel="noreferrer">@outlook.com</a></p><p>主题格式： 学号-姓名-考核-Cbasis-01</p><p>主题示例：2024090901012-张三-考核-Cbasis-01</p></blockquote><h2 id="出题人联系方式" tabindex="-1">出题人联系方式 <a class="header-anchor" href="#出题人联系方式" aria-label="Permalink to &quot;出题人联系方式&quot;">​</a></h2><blockquote><p>loafer</p><p>QQ：251492435</p><p>邮箱：loafer_e@qq.com</p></blockquote>`,29),n=[t];function r(p,i,c,d,h,u){return l(),s("div",null,n)}const k=a(e,[["render",r]]);export{E as __pageData,k as default};
